{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.bfeaeb3eb58c6dc2d3a2.hot-update.js","sources":["webpack:///./components/Prices.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Currencies from './Currencies'\r\nimport Rate from './Rate';\r\nimport Home from './Home'\r\n// import Axios from \"axios\";\r\nclass Prices extends Component {\r\n  static async getInitialProps() {}\r\n  state = {\r\n  };\r\ncomponentDidMount(){\r\n  \"use strict\";\r\n\r\n// Minimum resizable area\r\nvar minWidth = 60;\r\nvar minHeight = 40;\r\n\r\n// Thresholds\r\nvar FULLSCREEN_MARGINS = -10;\r\nvar MARGINS = 4;\r\n\r\n// End of what's configurable.\r\nvar clicked = null;\r\nvar onRightEdge, onBottomEdge, onLeftEdge, onTopEdge;\r\n\r\nvar rightScreenEdge, bottomScreenEdge;\r\n\r\nvar preSnapped;\r\n\r\nvar b, x, y;\r\n\r\nvar redraw = false;\r\n\r\nvar pane = document.getElementById('pane');\r\nvar ghostpane = document.getElementById('ghostpane');\r\n\r\nfunction setBounds(element, x, y, w, h) {\r\n\telement.style.left = x + 'px';\r\n\telement.style.top = y + 'px';\r\n\telement.style.width = w + 'px';\r\n\telement.style.height = h + 'px';\r\n}\r\n\r\nfunction hintHide() {\r\n  setBounds(ghostpane, b.left, b.top, b.width, b.height);\r\n  ghostpane.style.opacity = 0;\r\n\r\n  // var b = ghostpane.getBoundingClientRect();\r\n  // ghostpane.style.top = b.top + b.height / 2;\r\n  // ghostpane.style.left = b.left + b.width / 2;\r\n  // ghostpane.style.width = 0;\r\n  // ghostpane.style.height = 0;\r\n}\r\n\r\n\r\n// Mouse events\r\npane.addEventListener('mousedown', onMouseDown);\r\ndocument.addEventListener('mousemove', onMove);\r\ndocument.addEventListener('mouseup', onUp);\r\n\r\n// Touch events\t\r\n// pane.addEventListener('touchstart', onTouchDown);\r\ndocument.addEventListener('touchmove', onTouchMove);\r\ndocument.addEventListener('touchend', onTouchEnd);\r\n\r\n\r\nfunction onTouchDown(e) {\r\n  onDown(e.touches[0]);\r\n  if (e.cancelable) {\r\n    e.preventDefault();\r\n }\r\n  \r\n}\r\n\r\nfunction onTouchMove(e) {\r\n  onMove(e.touches[0]);\t\t\r\n}\r\n\r\nfunction onTouchEnd(e) {\r\n  if (e.touches.length ==0) onUp(e.changedTouches[0]);\r\n}\r\n\r\nfunction onMouseDown(e) {\r\n  onDown(e);\r\n  e.preventDefault();\r\n}\r\n\r\nfunction onDown(e) {\r\n  calc(e);\r\n\r\n  var isResizing = onRightEdge || onBottomEdge || onTopEdge || onLeftEdge;\r\n\r\n  clicked = {\r\n    x: x,\r\n    y: y,\r\n    cx: e.clientX,\r\n    cy: e.clientY,\r\n    w: b.width,\r\n    h: b.height,\r\n    isResizing: isResizing,\r\n    isMoving: !isResizing && canMove(),\r\n    onTopEdge: onTopEdge,\r\n    onLeftEdge: onLeftEdge,\r\n    onRightEdge: onRightEdge,\r\n    onBottomEdge: onBottomEdge\r\n  };\r\n}\r\n\r\nfunction canMove() {\r\n  return x > 0 && x < b.width && y > 0 && y < b.height\r\n  && y < 30;\r\n}\r\n\r\nfunction calc(e) {\r\n  b = pane.getBoundingClientRect();\r\n  x = e.clientX - b.left;\r\n  y = e.clientY - b.top;\r\n\r\n  onTopEdge = y < MARGINS;\r\n  onLeftEdge = x < MARGINS;\r\n  onRightEdge = x >= b.width - MARGINS;\r\n  onBottomEdge = y >= b.height - MARGINS;\r\n\r\n  rightScreenEdge = window.innerWidth - MARGINS;\r\n  bottomScreenEdge = window.innerHeight - MARGINS;\r\n}\r\n\r\nvar e;\r\n\r\nfunction onMove(ee) {\r\n  calc(ee);\r\n\r\n  e = ee;\r\n\r\n  redraw = true;\r\n\r\n}\r\n\r\nfunction animate() {\r\n\r\n  requestAnimationFrame(animate);\r\n\r\n  if (!redraw) return;\r\n\r\n  redraw = false;\r\n\r\n  if (clicked && clicked.isResizing) {\r\n\r\n    if (clicked.onRightEdge) pane.style.width = Math.max(x, minWidth) + 'px';\r\n    // if (clicked.onBottomEdge) pane.style.height = Math.max(y, minHeight) + 'px';\r\n\r\n    // if (clicked.onLeftEdge) {\r\n    //   var currentWidth = Math.max(clicked.cx - e.clientX  + clicked.w, minWidth);\r\n    //   if (currentWidth > minWidth) {\r\n    //     pane.style.width = currentWidth + 'px';\r\n    //     pane.style.left = e.clientX + 'px';\t\r\n    //   }\r\n    // }\r\n\r\n    // if (clicked.onTopEdge) {\r\n    //   var currentHeight = Math.max(clicked.cy - e.clientY  + clicked.h, minHeight);\r\n    //   if (currentHeight > minHeight) {\r\n    //     pane.style.height = currentHeight + 'px';\r\n    //     pane.style.top = e.clientY + 'px';\t\r\n    //   }\r\n    // }\r\n\r\n    hintHide();\r\n\r\n    return;\r\n  }\r\n\r\n//   if (clicked && clicked.isMoving) {\r\n\r\n//     if (b.top < FULLSCREEN_MARGINS || b.left < FULLSCREEN_MARGINS || b.right > window.innerWidth - FULLSCREEN_MARGINS || b.bottom > window.innerHeight - FULLSCREEN_MARGINS) {\r\n//       // hintFull();\r\n//       setBounds(ghostpane, 0, 0, window.innerWidth, window.innerHeight);\r\n//       ghostpane.style.opacity = 0.2;\r\n//     } else if (b.top < MARGINS) {\r\n//       // hintTop();\r\n//       setBounds(ghostpane, 0, 0, window.innerWidth, window.innerHeight / 2);\r\n//       ghostpane.style.opacity = 0.2;\r\n//     } else if (b.left < MARGINS) {\r\n//       // hintLeft();\r\n//       setBounds(ghostpane, 0, 0, window.innerWidth / 2, window.innerHeight);\r\n//       ghostpane.style.opacity = 0.2;\r\n//     } else if (b.right > rightScreenEdge) {\r\n//       // hintRight();\r\n//       setBounds(ghostpane, window.innerWidth / 2, 0, window.innerWidth / 2, window.innerHeight);\r\n//       ghostpane.style.opacity = 0.2;\r\n//     } else if (b.bottom > bottomScreenEdge) {\r\n//       // hintBottom();\r\n//       setBounds(ghostpane, 0, window.innerHeight / 2, window.innerWidth, window.innerWidth / 2);\r\n//       ghostpane.style.opacity = 0.2;\r\n//     } else {\r\n//       hintHide();\r\n//     }\r\n\r\n//     if (preSnapped) {\r\n//       setBounds(pane,\r\n//       \te.clientX - preSnapped.width / 2,\r\n//       \te.clientY - Math.min(clicked.y, preSnapped.height),\r\n//       \tpreSnapped.width,\r\n//       \tpreSnapped.height\r\n//       );\r\n//       return;\r\n//     }\r\n\r\n//     // moving\r\n//     pane.style.top = (e.clientY - clicked.y) + 'px';\r\n//     pane.style.left = (e.clientX - clicked.x) + 'px';\r\n\r\n//     return;\r\n//   }\r\n\r\n  // This code executes when mouse moves without clicking\r\n\r\n  // style cursor\r\n//   if (onRightEdge && onBottomEdge || onLeftEdge && onTopEdge) {\r\n//     pane.style.cursor = 'nwse-resize';\r\n//   }\r\n//    else if (onRightEdge && onTopEdge || onBottomEdge && onLeftEdge) {\r\n//     pane.style.cursor = 'nesw-resize';\r\n//   }\r\n  \r\n   if (onRightEdge || onLeftEdge) {\r\n    pane.style.cursor = 'e-resize';\r\n  } \r\n//   else if (onBottomEdge || onTopEdge) {\r\n//     pane.style.cursor = 'ns-resize';\r\n//   } \r\n//   else if (canMove()) {\r\n//     pane.style.cursor = 'move';\r\n//   }\r\n   else {\r\n    pane.style.cursor = 'default';\r\n  }\r\n}\r\n\r\nanimate();\r\n\r\nfunction onUp(e) {\r\n  calc(e);\r\n\r\n  if (clicked && clicked.isMoving) {\r\n    // Snap\r\n    var snapped = {\r\n      width: b.width,\r\n      height: b.height\r\n    };\r\n\r\n    if (b.top < FULLSCREEN_MARGINS || b.left < FULLSCREEN_MARGINS || b.right > window.innerWidth - FULLSCREEN_MARGINS || b.bottom > window.innerHeight - FULLSCREEN_MARGINS) {\r\n      // hintFull();\r\n      setBounds(pane, 0, 0, window.innerWidth, window.innerHeight);\r\n      preSnapped = snapped;\r\n    } else if (b.top < MARGINS) {\r\n      // hintTop();\r\n      setBounds(pane, 0, 0, window.innerWidth, window.innerHeight / 2);\r\n      preSnapped = snapped;\r\n    } else if (b.left < MARGINS) {\r\n      // hintLeft();\r\n      setBounds(pane, 0, 0, window.innerWidth / 2, window.innerHeight);\r\n      preSnapped = snapped;\r\n    } else if (b.right > rightScreenEdge) {\r\n      // hintRight();\r\n      setBounds(pane, window.innerWidth / 2, 0, window.innerWidth / 2, window.innerHeight);\r\n      preSnapped = snapped;\r\n    } else if (b.bottom > bottomScreenEdge) {\r\n      // hintBottom();\r\n      setBounds(pane, 0, window.innerHeight / 2, window.innerWidth, window.innerWidth / 2);\r\n      preSnapped = snapped;\r\n    } else {\r\n      preSnapped = null;\r\n    }\r\n\r\n    hintHide();\r\n\r\n  }\r\n\r\n  clicked = null;\r\n\r\n}\r\n  \r\n}\r\n  setst = () => {\r\n    this.setState({ currency: \"brp\" });\r\n  };\r\n\r\n  setunst = () => {\r\n    this.setState({ currency: \"\" });\r\n  };\r\n\r\n  priceGetter = (currency) => {\r\n     let val = \"\";\r\n\r\n    return val;\r\n  };\r\n\r\n  priceReturner = () => {};\r\n\r\n  render() {\r\n    let list = \"\";\r\n\r\n    switch (this.state.currency) {\r\n      case \"usd\":\r\n        list = \"usd\";\r\n        break;\r\n      case \"brp\":\r\n        list = \"brp\";\r\n\r\n        break;\r\n      default:\r\n        list = \"unset\";\r\n        break;\r\n    }\r\n    \r\n    // console.log(this.props.bpi);\r\n    return (\r\n      <div>\r\n        <div className='row'>\r\n          <div id=\"pane\" draggable=\"true\" className='scroll '>\r\n         \r\n    <div id=\"ghostpane\"></div>\r\n            <div\r\n              className='nav flex-column nav-pills width pt-5'\r\n              id='v-pills-tab'\r\n              role='tablist'\r\n              aria-orientation='vertical'\r\n            >\r\n            \r\n            <a\r\n            className='nav-link pl-4 active'\r\n            id='v-pills-home-tab'\r\n            data-toggle='pill'\r\n            href='#v-pills-home'\r\n            role='tab'\r\n            aria-controls='v-pills-home'\r\n            aria-selected='true'\r\n          >\r\n            Home\r\n          </a>\r\n            \r\n            {this.props.bpi.map((countries) => (\r\n               <Currencies key={countries.currency} currency={countries.currency} country={countries.country} active=\"\" />\r\n              ))}\r\n             \r\n           \r\n            </div>\r\n          </div>\r\n          <div className='col8 w-min-content'>\r\n            <div className='tab-content' id='v-pills-tabContent'>\r\n\r\n\r\n            \r\n            <div\r\n                className='tab-pane fade show active'\r\n                id='v-pills-home'\r\n                role='tabpanel'\r\n                aria-labelledby='v-pills-home-tab'\r\n              >\r\n\r\n<Home/>\r\n              </div>\r\n              {this.props.bpi.map((countries) => (\r\n                <Rate key={countries.currency} showActive=\"\" currency={countries.currency}/>\r\n              ))}\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <style jsx>\r\n        {`\r\n\r\n        .w-min-content{\r\n          width: 65vw\r\n        }\r\n\r\n        .nav-pills .nav-link.active, .nav-pills .show>.nav-link {\r\n    color: #fff;\r\n    background-color: lightblue;\r\n}\r\n\r\n\r\n.nav-link.active{\r\n          background-color: #17a2b8 !important;\r\n        }\r\n        \r\n        [draggable=true] {\r\n  cursor: move;\r\n}\r\n\r\n.resizable {\r\n  overflow: scroll;\r\n  resize: both;\r\n  max-width: 300px;\r\n  max-height: 460px;\r\n  border: 1px solid black;\r\n  min-width: 50px;\r\n  min-height: 50px;\r\n  background-color: skyblue;\r\n}\r\n\r\n#ghostpane{\r\n  display: none;\r\n  height: auto;\r\n}\r\n.col8{\r\n  flex: auto;\r\n}\r\n\r\n@media (max-width: 767px) {\r\n  #pane {\r\n\r\nmax-width: 35%;\r\n\r\n\r\n}\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  #pane {\r\n\r\n    max-width: 30%;\r\n\r\n}\r\n}\r\n        .scroll{\r\n\r\n      \r\n          height: 90vh;\r\n          overflow-x: auto;\r\n        }\r\n\r\n\r\n        .width{\r\n\r\n          width: 100%\r\n        }\r\n\r\n\r\n        #pane {\r\n          flex: inherit;\r\n\twidth: 25%;\r\n  height: 91vh;\r\n\t\r\n\t\r\n\r\n\tborder-right: 10px solid #17a2b8;\r\n\t\r\n}\r\n\r\n        \r\n        `}\r\n        </style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prices;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AAmRA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAjSA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAVA;AACA;AACA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA7CA;AAAA;AAAA;AA0IA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlcA;AACA;AAocA;;;;A","sourceRoot":""}